name: ci

on: push

jobs:
  ci:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        python-version: ["3.9.19", "3.10.9"]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # - name: cache poetry install
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.local
      #     key: poetry-1.1.12-0

      - uses: snok/install-poetry@v1
        with:
          version: 1.3.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      # - name: cache deps
      #   id: cache-deps
      #   uses: actions/cache@v2
      #   with:
      #     path: .venv
      #     key: pydeps-${{ hashFiles('**/poetry.lock') }}
      - run: poetry install --no-interaction --no-root
        # if: steps.cache-deps.outputs.cache-hit != 'true'

      - run: |
          poetry run coverage run -m unittest
          poetry run coverage xml

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml

      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
